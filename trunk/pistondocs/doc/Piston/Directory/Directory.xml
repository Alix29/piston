<?xml version="1.0" encoding="UTF-8"?>
<d:doc xmlns:d="http://piston.googlecode.com/svn/trunk/ns/doc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://piston.googlecode.com/svn/trunk/ns/doc http://piston.googlecode.com/svn/trunk/pistondocs/xml/doc.xsd"
    xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <name>Piston.Directory</name>
    <shortDescription>
        The Directory object represents a Directory.<div></div>
        It allows you list sub files and directories.
    </shortDescription>
    <constructors>
        <constructor>
            <description>Creates a new Directory object</description>
            <arguments>
                <argument optional="true">
                    <type>Object</type>
                    <name>propertyMap</name>
                    <description>The initial set of <a href="#Properties">Properties</a> to set</description>
                </argument>
            </arguments>
            <example><![CDATA[
var f = new Piston.Directory();
f.path = "/tmp";]]>
            </example>
            <example><![CDATA[
var f = new Piston.Directory({ "path" : "/tmp" });]]>
            </example>
        </constructor>
        <constructor>
            <description>Creates a new Directory object with the given path</description>
            <arguments>
                <argument>
                    <type>String</type>
                    <name>path</name>
                    <description>The full or relative path to the directory</description>
                </argument>
                <argument optional="true">
                    <type>Object</type>
                    <name>propertyMap</name>
                    <description>The initial set of <a href="#Properties">Properties</a> to set</description>
                </argument>
            </arguments>
            <example><![CDATA[
var f = new Piston.Directory("/tmp");]]>
            </example>
        </constructor>
    </constructors>
    <properties>
        <property readonly="false">
            <type>String</type>
            <name>path</name>
            <description>The full path to the directory</description>
            <validValue default="true">null</validValue>
            <validValue>*</validValue>
        </property>
    </properties>
    <methods>
        <method>
            <name>exists</name>
            <description>Returns true if the directory exists, false otherwise</description>
            <returns>
                <type>Boolean</type>
                <description>true if the directory exists, false otherwise</description>
            </returns>
            <arguments/>
            <arguments static="true">
                <argument>
                    <type>String</type>
                    <name>path</name>
                    <description>The full or relative path to the directory</description>
                </argument>
            </arguments>
            <example><![CDATA[
var f = new Piston.Directory("/tmp");

f.exists();    // true]]>
            </example>
            <example static="true"><![CDATA[
Piston.Directory.exists("/tmp");    // true]]>
            </example>            
        </method>
        <method>
            <name>isDirectory</name>
            <description>Returns true if a directory, false otherwise</description>
            <returns>
                <type>Boolean</type>
                <description>true if a directory, false otherwise</description>
            </returns>
            <arguments/>
            <arguments static="true">
                <argument>
                    <type>String</type>
                    <name>path</name>
                    <description>The path to check.</description>
                </argument>
            </arguments>
            <example><![CDATA[
var f = new Piston.Directory("/tmp");

f.isDirectory()        // true]]>
            </example>
            <example static="true"><![CDATA[
Piston.Directory.isDirectory("/tmp");    // true]]>
            </example>
        </method>
        <method>
            <name>isFile</name>
            <description>Returns true if a file, false otherwise</description>
            <returns>
                <type>Boolean</type>
                <description>true if a file, false otherwise</description>
            </returns>
            <arguments/>
            <arguments static="true">
                <argument>
                    <type>String</type>
                    <name>path</name>
                    <description>The path to check.</description>
                </argument>
            </arguments>
            <example><![CDATA[
var f = new Piston.Directory("/tmp");

f.isFile()        // false]]>
            </example>
            <example static="true"><![CDATA[
Piston.Directory.isFile("/tmp");    // false]]>
            </example>
        </method>
    </methods>
</d:doc>
